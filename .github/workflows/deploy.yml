name: Multi-Environment Deploy

on:
  push:
    branches:
      - develop
      - staging
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Environment Variables
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
            echo "CLUSTER=${{ secrets.EKS_CLUSTER_NAME_DEV }}" >> $GITHUB_ENV
            echo "ECR_REPO=${{ secrets.ECR_REPOSITORY_DEV }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_PATH=k8s/dev/deployment.yaml" >> $GITHUB_ENV
            echo "IMAGE_TAG=dev-${{ github.sha }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
            echo "CLUSTER=${{ secrets.EKS_CLUSTER_NAME_STAGING }}" >> $GITHUB_ENV
            echo "ECR_REPO=${{ secrets.ECR_REPOSITORY_STAGING }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_PATH=k8s/staging/deployment.yaml" >> $GITHUB_ENV
            echo "IMAGE_TAG=staging-${{ github.sha }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "CLUSTER=${{ secrets.EKS_CLUSTER_NAME_PROD }}" >> $GITHUB_ENV
            echo "ECR_REPO=${{ secrets.ECR_REPOSITORY_PROD }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_PATH=k8s/prod/deployment.yaml" >> $GITHUB_ENV
            echo "IMAGE_TAG=prod-${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        run: |
          ECR_URI=$(aws ecr describe-repositories --repository-names $ECR_REPO --query "repositories[0].repositoryUri" --output text)
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker push $ECR_URI:$IMAGE_TAG

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $CLUSTER --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          ECR_URI=$(aws ecr describe-repositories --repository-names $ECR_REPO --query "repositories[0].repositoryUri" --output text)
          sed "s|IMAGE_URL|$ECR_URI:$IMAGE_TAG|" $DEPLOYMENT_PATH | kubectl apply -f -
